{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adhiman\\\\WORK\\\\raspberrypi\\\\frontend\\\\src\\\\components\\\\SensorCard.jsx\";\nimport React from 'react';\n\n/**\r\n * SensorCard component to display sensor readings\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.title - Title of the sensor\r\n * @param {number} props.value - Current sensor value\r\n * @param {string} props.unit - Unit of measurement\r\n * @param {string} props.icon - Emoji or icon for the sensor\r\n * @param {string} props.status - Status based on value (normal, warning, danger)\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SensorCard = ({\n  title,\n  value,\n  unit,\n  icon,\n  status = 'normal'\n}) => {\n  // Define status colors based on status prop\n  const statusColors = {\n    normal: 'bg-green-50 border-green-200 text-green-800',\n    warning: 'bg-yellow-50 border-yellow-200 text-yellow-800',\n    danger: 'bg-red-50 border-red-200 text-red-800'\n  };\n\n  // Get the appropriate color set based on status\n  const colorClass = statusColors[status] || statusColors.normal;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `rounded-lg p-4 border ${colorClass} shadow-sm`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-2xl\",\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xs font-semibold uppercase tracking-wider\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 flex items-end justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-3xl font-bold\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-sm\",\n        children: unit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = SensorCard;\nexport default SensorCard;\nvar _c;\n$RefreshReg$(_c, \"SensorCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SensorCard","title","value","unit","icon","status","statusColors","normal","warning","danger","colorClass","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/adhiman/WORK/raspberrypi/frontend/src/components/SensorCard.jsx"],"sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * SensorCard component to display sensor readings\r\n * \r\n * @param {Object} props - Component props\r\n * @param {string} props.title - Title of the sensor\r\n * @param {number} props.value - Current sensor value\r\n * @param {string} props.unit - Unit of measurement\r\n * @param {string} props.icon - Emoji or icon for the sensor\r\n * @param {string} props.status - Status based on value (normal, warning, danger)\r\n */\r\nconst SensorCard = ({ title, value, unit, icon, status = 'normal' }) => {\r\n  // Define status colors based on status prop\r\n  const statusColors = {\r\n    normal: 'bg-green-50 border-green-200 text-green-800',\r\n    warning: 'bg-yellow-50 border-yellow-200 text-yellow-800',\r\n    danger: 'bg-red-50 border-red-200 text-red-800'\r\n  };\r\n\r\n  // Get the appropriate color set based on status\r\n  const colorClass = statusColors[status] || statusColors.normal;\r\n\r\n  return (\r\n    <div className={`rounded-lg p-4 border ${colorClass} shadow-sm`}>\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"text-2xl\">{icon}</div>\r\n        <div className=\"text-xs font-semibold uppercase tracking-wider\">{title}</div>\r\n      </div>\r\n      <div className=\"mt-3 flex items-end justify-between\">\r\n        <div className=\"text-3xl font-bold\">{value}</div>\r\n        <div className=\"text-sm\">{unit}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SensorCard; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA,SAAAC,MAAA,IAAAC,OAAA;AAUA,MAAMC,UAAU,GAAGA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,IAAI;EAAEC,IAAI;EAAEC,MAAM,GAAG;AAAS,CAAC,KAAK;EACtE;EACA,MAAMC,YAAY,GAAG;IACnBC,MAAM,EAAE,6CAA6C;IACrDC,OAAO,EAAE,gDAAgD;IACzDC,MAAM,EAAE;EACV,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGJ,YAAY,CAACD,MAAM,CAAC,IAAIC,YAAY,CAACC,MAAM;EAE9D,oBACER,OAAA;IAAKY,SAAS,EAAE,yBAAyBD,UAAU,YAAa;IAAAE,QAAA,gBAC9Db,OAAA;MAAKY,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChDb,OAAA;QAAKY,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAER;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACtCjB,OAAA;QAAKY,SAAS,EAAC,gDAAgD;QAAAC,QAAA,EAAEX;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC,eACNjB,OAAA;MAAKY,SAAS,EAAC,qCAAqC;MAAAC,QAAA,gBAClDb,OAAA;QAAKY,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEV;MAAK;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACjDjB,OAAA;QAAKY,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAET;MAAI;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GAvBIjB,UAAU;AAyBhB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}